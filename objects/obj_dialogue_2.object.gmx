<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dialogue_main</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-180</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = view_xview[0] + view_wview[0] / 2;
y = view_yview[0] + view_hview[0] / 2;

xx = x - sprite_width / 2; //start x-point of dialogue sprite
yy = y - sprite_height / 2; //start y-point of dialogue sprite

file = file_text_open_read(obj_main_1.filename);
info = 0;

while(!file_text_eof(file))
{
    str = file_text_readln(file);
    if (string_pos("#", str) != 0)
    {
        sub_str = string_copy(str, 0, 5);
        
        num = real(string_digits(sub_str));
        if (num != 0) 
        {
            info[num - 1, 0] = str;
        }
        k = 1;
    }
    if (string_pos("@", str) != 0)
    {
        if (num != 0)
        {
            info[num - 1, k++] = str;
        }
    }
}

file_text_close(file);

active_answer = 0;
pointer = 0;
pointer_t = 0;
replica = 1;
separator_r = 48;
separator_a = 48;
string_w = sprite_width - 64;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pointer_t = 0;

if (!replica)
{
    for (k = 1; k &lt; array_length_2d(info, pointer); k++)
    {
        if (k &gt; 1)
        {
            koef = k + 1 + floor(string_width(info[pointer, k - 1]) / string_w);
        }
        else
        {
            koef = k;
        }
        
        if ((point_in_rectangle(mouse_x, mouse_y, xx + 36, yy + 36 + separator_a * (koef - 1) + 10, xx - 20 + string_width(info[pointer, k]), 
                                yy + 36 + (separator_a * koef) + (separator_a * floor(string_width(info[pointer, k]) / string_w)) - 10)))
        {
            if (mouse_check_button_released(mb_left))
            {
                pointer_t = real(string_digits(info[pointer, k]));
                break;
            }
            active_answer = k;
            break;
        }
        else 
        {
            pointer_t = 0;
            active_answer = 0;
        }
    }

    if (pointer_t != 0)
    {
        switch (pointer_t)
        {
            case 50:
                instance_activate_object(obj_main_1);
                instance_destroy();
            break;
            
            default:
                replica = 1;
                pointer = pointer_t - 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (replica == 1)
{
    mouse_clear(mb_left);
    replica = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (replica == 1)
{
    mouse_clear(mb_left);
    replica = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_frosty_back, 0, view_xview[0], view_yview[0]);
draw_self();
draw_set_font(Underdog_20);

text = 0; text[0] = info[pointer, 0];

for (k = 1; k &lt; array_length_2d(info, pointer); k++)
{
    text[k] = info[pointer, k];
}

for (k = 0; k &lt; array_length_1d(text); k++)
{
    sub_str = string_copy(text[k], 0, 5);
    num = string_digits(sub_str);
    text[k] = string_replace_all(text[k], "#", "");
    text[k] = string_replace_all(text[k], "@", "");
    text[k] = string_replace_all(text[k], num, "");
}

if (replica)
{
    draw_text_ext_transformed_colour(xx + 32, yy + 36, text[0], separator_r, string_w, 1, 1, 0, c_white, c_white, c_white, c_white, 1);
    
    draw_sprite(spr_face_hero, 1, x - sprite_width / 2 - 250, y); draw_sprite(spr_face_oldman, 0, x + sprite_width / 2 + 250, y);
}
else
{
    offset = 36;
       
    for (k = 1; k &lt; array_length_2d(info, pointer); k++)
    {
        if (active_answer &gt; 0 and active_answer == k)
        {
            draw_text_ext_transformed_colour(xx + 32, yy + offset, text[k], separator_a, string_w, 1, 1, 0, global.Color2, global.Color2, global.Color2, global.Color2, 1);
        }
        else
        {
            draw_text_ext_transformed_colour(xx + 32, yy + offset, text[k], separator_a, string_w, 1, 1, 0, global.myColor, global.myColor, global.myColor, global.myColor, 1);
        }
        offset += 2 * separator_a + separator_a * floor(string_width(info[pointer, k]) / string_w); 
    }
    
    draw_sprite(spr_face_hero, 0, x - sprite_width / 2 - 250, y); draw_sprite(spr_face_oldman, 1, x + sprite_width / 2 + 250, y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
