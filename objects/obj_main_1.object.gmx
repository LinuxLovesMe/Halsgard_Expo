<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-40</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Read themes from file

coords = 0;
angle = 0;
rotated = false;
old_angle = 0;

filename = "";
AP_amount = 3;

theme_info = ds_map_create();
separator = 30;
save_theme = "";

parent = obj_forest_control_1;

file = file_text_open_read("Theme_1.txt");
while (!file_text_eof(file))
{
    str = file_text_readln(file); //Source string with theme name
    if (string_pos("%T", str) != 0)
    {
        sub_str = string_copy(str, 0, 3);
        num = real(string_digits(sub_str));
        str = string_replace_all(str, "%T", "");
        num2 = string(num);
        str = string_replace_all(str, num2, "");        
        save_theme = str;
        ds_map_add(theme_info, str, filename);
    }
    
    if (string_pos("@", str) != 0)
    {
        str = string_replace_all(str, "@", "");
        str = string_copy(str, 0, 12);
        ds_map_replace(theme_info, save_theme, str);
    }
}

file_text_close(file);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create dialogue window

event_inherited();

center_x = view_xview[0] + view_wview[0] / 2;
center_y = view_yview[0] + view_hview[0] / 2;

//Vertices of triangle button

triangle_x1 = center_x - 50;
triangle_y1 = center_y + 50;
triangle_x2 = center_x + 50;
triangle_y2 = center_y + 50;
triangle_x3 = center_x;
triangle_y3 = center_y + 50 + 86.6;

//Compute coordinates for eight variants of choose  
for (var i = 0; i &lt; 8; i++)
{
    //X coordinate
    coords[i, 0] = center_x - (sprite_get_width(spr_main_2) / 2 - 50) * cos((-angle + i * 45) * pi / 180);
    
    //Y coordinate
    coords[i, 1] = center_y - (sprite_get_height(spr_main_2) / 2 - 50) * sin((-angle + i * 45) * pi / 180);
    
    //Angle (to rotate a sprite)
    coords[i, 2] = angle - i * 45 - 90;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (parent.dialogue_on) 
{
    parent.dialogue_exists = 0;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If AP has ended

if (parent.dialogue_on and AP_amount &lt; 1)
{
    if (alarm[2] == -1) alarm[2] = room_speed / 2;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (rotated == 1)
{
    angle += 1;
    if (angle &gt;= old_angle + 45) rotated = false;
}

if (rotated == 2)
{
    angle -= 1;
    if (angle &lt;= old_angle - 45) rotated = false;
}
if (angle &gt;= 360) angle = 0;

//Draw circles in center    

center_x = view_xview[0] + view_wview[0] / 2;
center_y = view_yview[0] + view_hview[0] / 2;

//Vertices of triangle button

triangle_x1 = center_x - 50;
triangle_y1 = center_y + 50;
triangle_x2 = center_x + 50;
triangle_y2 = center_y + 50;
triangle_x3 = center_x;
triangle_y3 = center_y + 50 + 86.6;

//Compute coordinates for eight variants of choose  

for (var i = 0; i &lt; 8; i++)
{
    //X coordinate
    coords[i, 0] = center_x - (sprite_get_width(spr_main_2) / 2 - 50) * cos((-angle + i * 45) * pi / 180);
    
    //Y coordinate
    coords[i, 1] = center_y - (sprite_get_height(spr_main_2) / 2 - 50) * sin((-angle + i * 45) * pi / 180);
    
    //Angle (to rotate a sprite)
    coords[i, 2] = angle - i * 45 - 90;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (point_in_circle(mouse_x, mouse_y, center_x, center_y, sprite_get_width(spr_main_2) / 2))
{
    if (!point_in_circle(mouse_x, mouse_y, center_x, center_y, sprite_get_width(spr_main_3) / 2))
    {
        if (!rotated)
        {
            rotated = 2;
            old_angle = angle;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (point_in_circle(mouse_x, mouse_y, center_x, center_y, sprite_get_width(spr_main_2) / 2))
{
    if (!point_in_circle(mouse_x, mouse_y, center_x, center_y, sprite_get_width(spr_main_3) / 2))
    {
        if (!rotated)
        {
            rotated = 1;
            old_angle = angle;
        }
    }
}

for (i = 0; i &lt; ds_map_size(theme_info); i++)
{
    if (i == 0) iterator = ds_map_find_last(theme_info);
    else iterator = ds_map_find_previous(theme_info, iterator);
        
    if (coords[i, 0] - 10 &lt; triangle_x3 and coords[i, 0] + 10 &gt; triangle_x3 and coords[i, 1] &gt; triangle_y3)
    {
        if (point_in_triangle(mouse_x, mouse_y, triangle_x1, triangle_y1, triangle_x2, triangle_y2, triangle_x3, triangle_y3))
        {
            filename = string(ds_map_find_value(theme_info, iterator));
            if (!instance_exists(obj_dialogue_2)) instance_create(0, 0, obj_dialogue_2);
            AP_amount -= 1;
            parent.dialogue_on = false;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw three rings

draw_sprite(spr_frosty_back, 0, view_xview[0], view_yview[0]);

draw_sprite_ext(spr_main_1, 0, center_x, center_y, 1, 1, 0, c_white, 1);

draw_sprite_ext(spr_main_2, 1, center_x, center_y, 1, 1, angle, c_white, 1);

draw_sprite_ext(spr_main_3, 2, center_x, center_y, 1, 1, 0, c_white, 1);
      
//Draw triangle-button

draw_triangle_colour(triangle_x1, triangle_y1, triangle_x2, triangle_y2, triangle_x3, triangle_y3, c_white, c_white, c_white, false);

for (var i = 0; i &lt; 8; i++)
{
    if (i &lt; ds_map_size(theme_info))
    {
        if (i == 0) first = ds_map_find_last(theme_info);
        else first = ds_map_find_previous(theme_info, first);
        draw_circle_colour(coords[i, 0], coords[i, 1], 40, c_white, c_white, false);
        text = first;
    }
    else
    {
        text = "Вы не можете сейчас открыть этот диалог";
        draw_circle_colour(coords[i, 0], coords[i, 1], 40, c_red, c_red, false);
    }
        
    //Draw number on circle
    draw_text_ext_transformed_colour(coords[i, 0], coords[i, 1], string(i + 1), 1, 100, 1, 1, coords[i, 2], c_black, c_black, c_black, c_black, 1);
          
    //Write message about dialog in center if circle is under triangle
    
    if (coords[i, 0] - 10 &lt; triangle_x3 and coords[i, 0] + 10 &gt; triangle_x3 and coords[i, 1] &gt; triangle_y3)
    {
        draw_set_colour(c_white);
        draw_set_font(Underdog_20);
        draw_text_ext(center_x - sprite_get_width(spr_main_3) / 3, center_y - sprite_get_height(spr_main_3) / 3, text, separator, sprite_get_width(spr_main_3));
    }
}

draw_set_font(Underdog_30);
draw_text_outline(view_xview[0] + 20, view_yview[0] + 14, "Собеседник: Советник", 1, c_black, 16);
if (AP_amount &gt;=0) draw_text_outline(view_xview[0] + view_wview[0] - 302, view_yview[0] + view_hview[0] - 60, "Осталось ОД: " + string(AP_amount), 1, c_black, 16);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (parent.dialogue_on) 
{
    parent.dialogue_exists = 0;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
