<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum cards
{ 
    archer, mage, warrior, super_archer, super_mage, super_warrior
};
randomize();

start_point_x = 450;
start_point_y = 780;

game_round = false;

oldman_cards = ds_list_create();
player_cards = ds_list_create();

t = 0;
cards_number = 5;

move_to_x = 960;
move_to_y = 320;

for (i = 0; i &lt; cards_number; i++)
{
    temp = instance_create(200 + t, -400, obj_oldman_card);
    ds_list_add(oldman_cards, temp);
    v = ds_list_find_value(oldman_cards, ds_list_size(oldman_cards) - 1);
    v.value = choose(cards.archer, cards.warrior, cards.mage);
    v.angle = 0; //Angle = side of card
        
    temp = instance_create(-200, 200, obj_aid_card);
    ds_list_add(player_cards, temp);
    v = ds_list_find_value(player_cards, ds_list_size(player_cards) - 1);
    v.value = choose(cards.archer, cards.warrior, cards.mage);
    if (obj_ragn_control_2.fx_effect == 2) 
    {
        v.angle = 0;
    }
    else
    {
        v.angle = 180;
    }    
    v.moved = true;
    v.point_x[0] = start_point_x + t;
    v.point_y[0] = start_point_y;
    t += 220; //Distance between two cards
}

//One of the cards is changed to Trump

i = random(ds_list_size(oldman_cards) - 1);
v = ds_list_find_value(oldman_cards, i);
v.value = choose(cards.super_archer, cards.super_mage, cards.super_warrior);

winner = 0; battle_text = 0;

global.played_card_oldman = 0;
global.played_card_player = 0;

alarm[0] = room_speed + 10;

total_score = 0; rounds = 0;
temp = 0; move_round = 2;
trig = 0; trig2 = 0; trig3 = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (total_score &gt;= 0) obj_ragn_control_2.total_score += 1;
else obj_ragn_control_2.total_score -= 1;

with (obj_aid_card)
{
    instance_destroy();
}
    
with (obj_oldman_card)
{
    instance_destroy();
}
    
ds_list_destroy(oldman_cards);
ds_list_destroy(player_cards);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_ragn_control_2.stop_game = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>battle_text = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_aid_card)
{
    clickable = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Card dissapears out of screen

global.played_card_oldman.dissapeared = true;
global.played_card_player.dissapeared = true;

global.played_card_oldman = 0;
global.played_card_player = 0;

temp = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_aid_card)
{
    choose_trump = true;
    clickable = true;
}

battle_text = 1;
alarm[3] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check round of card game

if (global.played_card_oldman != 0 and global.played_card_player != 0 and game_round)    
{
    var scores = 0;        
    switch (global.played_card_player.value)
    {
        case cards.archer:
        {
            scores = global.played_card_oldman.value - 1;
            if (scores == 0) scores -= 1;
            else if (scores == -1) scores += 1;
            if (global.played_card_oldman.value &gt;= 3) scores = -1;    
            break;
        }
        
        case cards.mage:
        {
            scores = global.played_card_oldman.value - 1;
            if (global.played_card_oldman.value &gt;= 3) scores = -1;
            else scores = -scores;
            break;
        }
        
        case cards.warrior:
        {
            scores = global.played_card_oldman.value - 1;
            if (scores == 1) scores = 0;
            else if (scores == 0) scores = 1;
            if (global.played_card_oldman.value &gt;= 3) scores = -1;
            break;
        }
        
        case cards.super_archer:
        {
            scores = global.played_card_oldman.value;
            if (scores == cards.super_mage) scores = -1;
            else if (scores == cards.super_archer) scores = 0;
            else scores = 1;
            break;
        }
        
        case cards.super_mage:
        {
            scores = global.played_card_oldman.value;
            if (scores == cards.super_warrior) scores = -1;
            else if (scores == cards.super_mage) scores = 0;
            else scores = 1;
            break;
        }
                
        case cards.super_warrior:
        {
            scores = global.played_card_oldman.value;
            if (scores == cards.super_archer) scores = -1;
            else if (scores == cards.super_warrior) scores = 0;
            else scores = 1;
            break;
        }
    }
    
    winner = scores;
    total_score += winner;
    
    if (winner == -1) winner = 2; // 0 is None, 1 is Aid, 2 is Oldman
        
    game_round = false;
    alarm[1] = room_speed * 2;
    rounds++;    
}

if (rounds == cards_number and alarm[4] == -1)
{
    alarm[4] = room_speed + 30;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If computer moves the card

if (move_round == 0 and temp == 0 and rounds &lt; cards_number - 1)//0 - computer first
{
    do //AI is not so stupid to simply throw up the trump
    {
        i = random(ds_list_size(oldman_cards) - 1);
        v = ds_list_find_value(oldman_cards, i);
    }
    until(v.value != cards.super_archer or v.value != cards.super_mage or v.value != cards.super_warrior);
    
    ds_list_delete(oldman_cards, i);
    
    v.point_x[0] = move_to_x;
    v.point_y[0] = move_to_y;
    v.moved = true;
        
    global.played_card_oldman = v;
    
    alarm[2] = room_speed;
    
    game_round = true;
    
    temp = 1;
    move_round = 1; //1 - player first
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If player moves the card

if (move_round == 1 and temp == 0) //1 - player first
{
    if (trig2 == 1)
    {
        trig2 = 0;
        with (obj_aid_card) clickable = true;
    }       
    if (global.played_card_player != 0)
    {
        v = 0;
        for (var k = 0; k &lt; ds_list_size(oldman_cards); k++)
        {
            var val = ds_list_find_value(oldman_cards, k ).value;
            
            if ((global.played_card_player.value == 3 and val == 4)
            
            or (global.played_card_player.value == 4 and val == 5)
            
            or (global.played_card_player.value == 5 and val == 3)
            
            or (global.played_card_player.value == 0 and val == 1)
            
            or (global.played_card_player.value == 1 and val == 2)
            
            or (global.played_card_player.value == 2 and val == 0))
            {
                v = ds_list_find_value(oldman_cards, k);
                ds_list_delete(oldman_cards, k);
                break;
            }
        }
        
        if (v == 0 and rounds &gt; 3) //Enemy must not throw up his trump too early
        {
            for (var n = 0; n &lt; ds_list_size(oldman_cards); n++)
            {    
                if (ds_list_find_value(oldman_cards, n ).value == 3 or ds_list_find_value(oldman_cards, n ).value == 4
                    or ds_list_find_value(oldman_cards, n ).value == 5)
                {
                    v = ds_list_find_value(oldman_cards, n);
                    ds_list_delete(oldman_cards, n);
                    break;
                }                    
            }
        }
                
        if (v == 0)
        {
            for (var l = 0; l &lt; ds_list_size(oldman_cards); l++)
            {
                if ((global.played_card_player.value == 0
                    and ds_list_find_value(oldman_cards, l ).value == 0)
                
                or (global.played_card_player.value == 1
                    and ds_list_find_value(oldman_cards, l ).value == 1)
                
                or (global.played_card_player.value == 2
                    and ds_list_find_value(oldman_cards, l ).value == 2))
                {
                    v = ds_list_find_value(oldman_cards, l);
                    ds_list_delete(oldman_cards, l);
                    break;
                }
            }
        }
        
        if (v == 0)
        {
            i = random(ds_list_size(oldman_cards) - 1);
            v = ds_list_find_value(oldman_cards, i);
            ds_list_delete(oldman_cards, i);
        }
                
        v.point_x[0] = move_to_x;
        v.point_y[0] = move_to_y;
        v.moved = true;
        
        move_round = 0;
        trig = 1; temp = 1;   
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///When cards meeting each another

if (trig == 1)
{
    m = 0;
    with (obj_aid_card)
    {
        if (moved) other.m++;
    }
    with (obj_oldman_card)
    {
        if (moved) other.m++;
    }
    if (m == 0) //If all cards are at their place 
    {           
        global.played_card_oldman = v;
        game_round = true;
        trig = 0;
        trig2 = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Begin of the game when player has chosen the trump

var h = false;

with (obj_aid_card)
{
    if (trump_choosed) h = true;
}

if (h = true and trig3 == 1)
{
    trig3 = 0;
    move_round = 1;
    trig2 = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var t = 0;

if (rounds == cards_number)
{
    draw_set_colour(c_white);
    draw_set_font(Runic_46);
    if (!obj_ragn_control_2.stop_game)
    {
        if (total_score &gt; 0) draw_text(800, 120, "Победа Эйда");
        else if(total_score &lt; 0) draw_text(800, 120, "Победа Советника");
        else if(total_score == 0) draw_text(800, 120, "Победителя нет");
    }
}
else
{
    draw_set_colour(c_white);
    draw_set_font(Runic_46);
    draw_text(40, 34, "Рейтинг: " + string(obj_ragn_control_2.card_rating));
    draw_text(40, 90, "На кону: " + string(obj_ragn_control_2.con) + " ХВ");
}
if (alarm[0] == -1 and battle_text)
{
    draw_set_colour(c_white);
    draw_set_font(Runic_68);
    draw_text(820, 120, "Раунд " + string(obj_ragn_control_2.battle_number));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
