<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_draugr_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-80</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>walk_speed = 3.5;
maxhealth = 2;
attack_chance = 0.6;
attack_speed = 100;
seeHeight = 1680;

near = false;
sprite_index = spr_draugr_rising;
state = "rise";
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!obj_mainhero.jumped)
{
    var chance = irandom(9) + 1;
    if (chance &lt;= attack_chance * 10)
    {
        obj_mainhero.maxhealth--;
    }
}
image_speed = 0.2;
sprite_index = spr_draugr_punch;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (maxhealth &lt;= 0)
{
    global.kills++;
    if (fire != 0)
    {
        fire.destroy = true;
    }
    burned = false;
    instance_destroy();
}

if (state == "rise")
{
    if (!place_free(x, y + 1))
    {
        image_index += 0.2;
        if (image_index &gt;= 7)
        {
            state = "walk";
            sprite_index = spr_draugr_walk;
            image_index = 0;
        }   
    }
}

if (state == "walk")
{
if(seePlayer){        
        if(x &lt; obj_mainhero.x)
            image_xscale = -1;
        else if(x &gt; obj_mainhero.x)
            image_xscale = 1;
        
        if(abs(x - obj_mainhero.x) &lt; abs(sprite_width))
            near = true;
            
        else
           near = false;
           
        if(!near){
            if(image_index &gt; 1 and image_index &lt; 4){
                if(x &gt; obj_mainhero.x)
                    hspeed = -2;
                else
                    hspeed = 2;
            }else
                hspeed = 0;
        }else
            hspeed = 0;
    }
    if(!seePlayer){
        if(image_xscale &lt; 0){
            if(x &lt; room_width)
                hspeed = 2
            else{
                image_xscale = -image_xscale;
                hspeed = -hspeed;
            }
        }
        else if(image_xscale &gt; 0){
            if(x &gt; sprite_width)
                hspeed = -2
            else{
                image_xscale = -image_xscale;
                hspeed = -hspeed;
            }
        }
    }
}
/*
if (state == "walk")
{
    image_speed = 0.1;
    if (x &lt; obj_mainhero.x)
    {
        image_xscale = -1;
    }
    else
    {
        if (x &gt; obj_mainhero.x)
        {
            image_xscale = 1;
        }
    }
    
    if (distance_to_object(obj_mainhero) &lt; 3)
    {
        near = true;
    }
    else
    {
       near = false;
    }
       
    if (!near)
    {
        if (image_index &gt; 1 and image_index &lt; 4)
        {
            if (x &gt; obj_mainhero.x)
            {
                hspeed = -walk_speed;
            }
            else
            {
                hspeed = walk_speed;
            }
        }
        else
        {
            hspeed = 0;
            alarm[0] = attack_speed;
        }
    }
    else
    {
        hspeed = 0;
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_rune_1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other) instance_destroy();
maxhealth --;
if (maxhealth == 0) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
