<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Parametres for text interactive

active_answer = 0;
pointer = 0;
replica = 1;
pointer_t = 0;
separator_r = 48;
separator_a = 54;
string_w = 800;
surf_mask = -1;
surf_mask_width = view_wview[0];
surf_mask_height = view_hview[0];

draw_x = view_xview[0] + view_wview[0] / 2;
draw_y = view_yview[0] + view_hview[0] / 2;

xx = draw_x - 420; //start x-point of full_show sprite
yy = draw_y - 240; //start y-point of full_show sprite
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Parsing text file to generate answers

file = file_text_open_read(global.planescape_file);

while(!file_text_eof(file))
{
    str = file_text_readln(file);
    if (string_pos("#", str) != 0)
    {
        sub_str = string_copy(str, 0, 5);
        
        num = real(string_digits(sub_str));
        if (num != 0) 
        {
            info[num - 1, 0] = str;
        }
        k = 1;
    }
    if (string_pos("@", str) != 0)
    {
        if (num != 0)
        {
            info[num - 1, k++] = str;
        }
    }
}

file_text_close(file);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change object_state while choosing answers

pointer_t = 0;

if (!replica)
{
    for (k = 1; k &lt; array_length_2d(info, pointer); k++)
    {
        if ((point_in_rectangle(mouse_x, mouse_y, xx + 30 + (string_w - string_width(text_d[k])) / 2, yy + 30 + (separator_a + 20) * (k - 1),
                                xx + 30 + (string_w - string_width(text_d[k])) / 2 + string_width(text_d[k]), yy + 30 + separator_a * k)))
        {
            if (mouse_check_button_released(mb_left))
            {
                var num_string = string_copy(info[pointer, k], 0, 5);
                pointer_t = real(string_digits(num_string));
                break;
            }
            active_answer = k;
            break;
        }
        else
        {
            pointer_t = 0;
            active_answer = 0;
        }
    }
    
    if (pointer_t != 0)
    {
        global.planescape_parent.object_state = "action_" + string(pointer_t);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Answer in text window with LMB

if (global.full_show)
{
    if (replica == 1)
    {
        mouse_clear(mb_left);
        replica = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.full_show)
{
    if (!surface_exists(surf_mask))
    {
        surf_mask = surface_create(surf_mask_width, surf_mask_height);
    }
    surface_set_target(surf_mask);
    draw_clear(c_white);
    draw_sprite(spr_inter_mask, 0, view_wview[0] / 2, view_hview[0] / 2);
        
    surface_reset_target();
    var tex_mask = surface_get_texture(surf_mask);
    gfx_blur_masked(application_surface, tex_mask, 3, 12, 0, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.full_show)
{
    draw_sprite(spr_interactive, 0, draw_x, draw_y);
    myColor = make_colour_rgb(120, 168, 194);
    draw_set_font(Underdog_20);
    Color2 = make_colour_rgb(150, 210, 242);
    
    text_d[0] = info[pointer, 0];

    for (k = 1; k &lt; array_length_2d(info, pointer); k++)
    {
        text_d[k] = info[pointer, k];
    }

    for (k = 0; k &lt; array_length_1d(text_d); k++)
    {
        sub_str = string_copy(text_d[k], 0, 5);
        num = string_digits(sub_str);
        text_d[k] = string_replace_all(text_d[k], "#", "");
        text_d[k] = string_replace_all(text_d[k], "@", "");
        text_d[k] = string_replace_all(text_d[k], num, "");
    }

    if (replica)
    {
        draw_text_ext_transformed_colour(xx + 30, yy + 30, text_d[0], separator_r, string_w, 1, 1, 0, c_white, c_white, c_white, c_white, 1);
    }
    else
    {
        for (k = 1; k &lt; array_length_2d(info, pointer); k++)
        {
            if (active_answer &gt; 0 and active_answer == k)
            {
                draw_text_ext_transformed_colour(xx + 30 + (string_w - string_width(text_d[k])) / 2, yy + 30 + (separator_a + 20) * (k - 1), text_d[k], separator_a, string_w, 1, 1, 0, Color2, Color2, Color2, Color2, 1);
            }
            else
            {
                draw_text_ext_transformed_colour(xx + 30 + (string_w - string_width(text_d[k])) / 2, yy + 30 + (separator_a + 20) * (k - 1), text_d[k], separator_a, string_w, 1, 1, 0, myColor, myColor, myColor, myColor, 1);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
