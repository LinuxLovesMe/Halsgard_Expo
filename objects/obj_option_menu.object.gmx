<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_option_menu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>option[0] = "ПОЛНЫЙ ЭКРАН";
option[1] = "ГРОМКОСТЬ";
option[2] = "УРОВЕНЬ СЛОЖНОСТИ";
option[3] = "   ИСТОРИЯ";
option[4] = "   ВЫЖИВАНИЕ";
option[5] = "";
option[6] = "НАЗАД В ГЛАВНОЕ МЕНЮ";

space = 80;
curr_pos = 0;

x = (surface_get_width(application_surface) - sprite_width) / 2;
y = (surface_get_height(application_surface) - sprite_height) / 2;
option_x = x + 80;
option_y = y + 80;

range = ui_range_create(option_x + string_width(string(option[1])) + 80, option_y + space + 4, 400, ui_default);
ui_range_set_limit(range, 0, 10);
ui_range_set_max(range, 10);
ui_range_set_value(range, ds_map_find_value(global.options, "volume"));

checkbox1 = ui_checkbox_create(option_x + string_width(string(option[0])) + 80, option_y + 2, 54, "");
checkbox2 = ui_checkbox_create(option_x + string_width(string(option[3])) + 120, option_y + space * 3, 54, "");
checkbox3 = ui_checkbox_create(option_x + string_width(string(option[4])) + 80, option_y + space * 4, 54, "");

if (ds_map_find_value(global.options, "history_mode")) ui_set_checked(checkbox2, true) else ui_set_checked(checkbox2, false);
if (ds_map_find_value(global.options, "fullscreen")) ui_set_checked(checkbox1, true) else ui_set_checked(checkbox1, false);
if (ds_map_find_value(global.options, "survival_mode")) ui_set_checked(checkbox3, true) else ui_set_checked(checkbox3, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_map_replace(global.options, "fullscreen", ui_get_checked(checkbox1));
ds_map_replace(global.options, "volume", ui_range_get_value(range));
ds_map_replace(global.options, "history_mode", ui_get_checked(checkbox2));
ds_map_replace(global.options, "survival_mode", ui_get_checked(checkbox3));

var file; 
file = file_text_open_write("Options.franbow");
file_text_write_string(file, "fullscreen = " + string(ds_map_find_value(global.options, "fullscreen")));
file_text_writeln(file);
file_text_write_string(file, "volume = " + string(ds_map_find_value(global.options, "volume")));
file_text_writeln(file);
file_text_write_string(file, "history_mode = " + string(ds_map_find_value(global.options, "history_mode")));
file_text_writeln(file);
file_text_write_string(file, "survival_mode = " + string(ds_map_find_value(global.options, "survival_mode")));
file_text_writeln(file);
file_text_writeln(file);
file_text_write_string(file, "Please, don't change this file by hands! Thx :)");
file_text_close(file);

ui_clear_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var delta = 20;

if (point_in_rectangle(mouse_x, mouse_y, option_x - delta, option_y + space * 6 - delta,
                        option_x + string_width(string(option[6])) + delta,
                        option_y + space * 6 + string_height(string(option[6])) + delta))
{
    if (mouse_check_button_released(mb_left)) 
    {
        instance_destroy();
    }
}

if (ui_get_focus(checkbox2) or ui_get_focus(checkbox3))
{
    ui_set_checked(checkbox2, false);
    ui_set_checked(checkbox3, false);

    if (ui_get_focus(checkbox2)) ui_set_checked(checkbox2, true);
    if (ui_get_focus(checkbox3)) ui_set_checked(checkbox3, true);
}

if (ui_get_enable(range))
{
    ds_map_replace(global.options, "volume", ui_range_get_value(range));
}

if (ui_get_checked(checkbox1))
{
    if (!ds_map_find_value(global.options, "fullscreen"))
    {
        window_set_fullscreen(true);
        ds_map_replace(global.options, "fullscreen", 1);
    }
}
else
{
    if (ds_map_find_value(global.options, "fullscreen"))
    {
        set_window_size();
        ds_map_replace(global.options, "fullscreen", 0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_blur_menu, 0, 0, 0);

draw_self();

myColor = make_color_rgb(226, 226, 226);
draw_set_font(Runic_46);
deepRed = make_color_rgb(140, 0, 0);
draw_set_color(myColor);

var opt;
for (opt = 0; opt &lt; array_length_1d(option); opt++)
{
    draw_text(option_x, option_y + (opt * space), string(option[opt]));
}

ui_set_foreground_colour(range, myColor);
ui_set_background_colour(range, deepRed);

ui_set_foreground_colour(checkbox1, myColor);
ui_set_background_colour(checkbox1, deepRed);

ui_set_foreground_colour(checkbox2, myColor);
ui_set_background_colour(checkbox2, deepRed);

ui_set_foreground_colour(checkbox3, myColor);
ui_set_background_colour(checkbox3, deepRed);

ui_draw_all();

draw_text(option_x + string_width(string(option[1])) + 540, option_y + space, string(ui_range_get_value(range)));

draw_line_width_color(option_x, option_y + space * 7 - 20, option_x + string_width(string(option[6])), option_y + space * 7 - 20, 3, myColor, myColor);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
