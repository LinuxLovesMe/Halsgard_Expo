<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_viggo_valentine</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-480</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>local_menu[0] = "ГИД ПО ВЫЖИВАНИЮ";
local_menu[1] = "ЛЕТОПИСЬ ЭЙДА";
local_menu[2] = "ХАРАКТЕРИСТИКИ";
local_menu[3] = "ГРОМКОСТЬ";
local_menu[4] = "В ГЛАВНОЕ МЕНЮ";

space = 140;
action = 5;
curr_pos = 5;
number = 10;
show_description = false;

range = ui_range_create(view_xview[0] + view_wview[0] - string_width(local_menu[3]) - 400, view_yview[0] + 162 + (3 * space), 280, ui_default);
ui_range_set_limit(range, 0, 10);
ui_range_set_max(range, 10);
ui_range_set_value(range, ds_map_find_value(global.options, "volume"));

x = view_xview[0] + 550;
y = view_yview[0] + 468;

xx[0] = x + 2; yy[0] = y - 32; xt[0] = x - 24; yt[0] = y - 70; xx[1] = x - 54; yy[1] = y - 306; xt[1] = x - 4; yt[1] = y - 254;
xx[2] = x + 278; yy[2] = y - 252; xt[2] = x + 328; yt[2] = y - 190; xx[3] = x + 308; yy[3] = y - 16; xt[3] = x + 360; yt[3] = y + 40;
xx[4] = x + 300; yy[4] = y + 248; xt[4] = x + 352; yt[4] = y + 310; xx[5] = x + 8; yy[5] = y + 312; xt[5] = x + 58; yt[5] = y + 370;
xx[6] = x - 250; yy[6] = y + 240; xt[6] = x - 204; yt[6] = y + 302; xx[7] = x - 334; yy[7] = y + 60; xt[7] = x - 280; yt[7] = y + 112;
xx[8] = x - 324; yy[8] = y - 136; xt[8] = x - 284; yt[8] = y - 74;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_map_replace(global.options, "volume", ui_range_get_value(range));

save_options();
ui_clear_all();
global.pause = paused.non_pause;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (t = 0; t &lt; 5; t++)
{
    if (point_in_rectangle(mouse_x, mouse_y, view_xview[0] + view_wview[0] - string_width(local_menu[t]) - 154, view_yview[0] + (t * space) + 154,
                           view_xview[0] + view_wview[0] - 30, view_yview[0] + 204 + (t * space)) and t != 3)
    {
        curr_pos = t;
        
        if (mouse_check_button_released(mb_left))
        {
            action = t;
        }
        break;
    }
    else curr_pos = 5;
}

if (point_in_rectangle(mouse_x, mouse_y, view_xview[0] + view_wview[0] - string_width(local_menu[3]) - 154, view_yview[0] + (3 * space) + 154,
                       view_xview[0] + view_wview[0] - 30, view_yview[0] + 204 + (3 * space)))
{
    curr_pos = 3;
}

if (ui_get_enable(range))
{
    ds_map_replace(global.options, "volume", ui_range_get_value(range));
}

switch (action)
{
    case 0:
        instance_destroy();
        instance_create(0, 0, obj_survival_guide);
    break;
    
    case 2:
        instance_destroy();
        instance_create(0, 0, obj_hero_status);
    break;
    
    case 4:
        instance_destroy();
        room_goto(main_menu);        
    break;
}

for (j = 0; j &lt; 9; j++)
{
    if (point_in_circle(mouse_x, mouse_y, xx[j], yy[j], 34) and global.inventory[j] != "")
    {
        show_description = true;
        number = j; break;
    }
    else show_description = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>deepRed = make_color_rgb(140, 0, 0);
draw_set_color(c_black);
draw_rectangle(view_xview[0], view_yview[0], view_xview[0] + view_wview[0], view_yview[0] + view_hview[0], 0);

draw_set_font(Underdog_30);

for (j = 0; j &lt; 5; j++)
{
    if (j == curr_pos and j != 3)
    {
        draw_text_colour(view_xview[0] + view_wview[0] - string_width(local_menu[j]) - 30, view_yview[0] + 154 + (j * space), string(local_menu[j]), deepRed, deepRed, deepRed, deepRed, 1);
    }
    else
    {
        draw_text_colour(view_xview[0] + view_wview[0] - string_width(local_menu[j]) - 30, view_yview[0] + 154 + (j * space), string(local_menu[j]), c_white, c_white, c_white, c_white, 1);
    }
}

draw_set_font(Underdog_20);

for (n = 0; n &lt; 9; n++)
{
    if (global.inventory[n] != "")
    {
        draw_sprite(spr_inventory_icon, ds_list_find_value(ds_map_find_value(global.items_list, global.inventory[n]), 0), xx[n], yy[n]);
        
        if (n == 0)
        {
            draw_text_colour(xt[n], yt[n], item_check_value(global.inventory[n]), c_black, c_black, c_black, c_black, 1);
        }
        else
        {
            draw_text_colour(xt[n], yt[n], item_check_value(global.inventory[n]), c_white, c_white, c_white, c_white, 1);
        }
    }
}

draw_self();

ui_set_foreground_colour(range, c_white);
ui_set_background_colour(range, deepRed);

ui_draw_all();

if (show_description)
{
    var description_string = ds_list_find_value(ds_map_find_value(global.items_list, global.inventory[number]), 2);
    
    if (number == 0)
    {
        draw_sprite_ext(spr_item_description, 0, xx[number] + 54, yy[number] + 64, string_width(description_string) / 320 + 0.068, 1, 0, c_white, 1);
        draw_text_colour(xx[number] + 65, yy[number] + 68, description_string, c_white, c_white, c_white, c_white, 1);
    }
    else if (string_width(description_string) &gt; 500)
    {
        var coef = floor(string_width(description_string) / 500) + 1;
        draw_sprite_ext(spr_item_description, 0, xt[number] - (4 * coef), yt[number] - (4 * coef), scr_desc_width(description_string), 1.1 * coef, 0, c_white, 1);
        draw_text_ext_colour(xt[number] + (4 * coef), yt[number], description_string, 36, 500, c_white, c_white, c_white, c_white, 1);
    }
    else
    {
        draw_sprite_ext(spr_item_description, 0, xt[number] - 4, yt[number] - 4, string_width(description_string) / 320 + 0.068, 1, 0, c_white, 1);
        draw_text_colour(xt[number] + 5, yt[number], description_string, c_white, c_white, c_white, c_white, 1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keyboard_clear(vk_escape);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
