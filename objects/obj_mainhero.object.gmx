<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mainhero_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initializing basic local parametres

state = "falling";
grav = 0.5;
maxenergy = 0;
vert_speed = 0;
move_speed = 5;
jump_speed = 15;

enum weapons
{
    weapon_none, weapon_fire, weapon_ice, weapon_supra
};

weapon = weapons.weapon_none;

old_state = "idle";
jumped = false;
border_const = 200;
onGround = false;
allow_shoot = false;
punched = false;
already_dead = false;

cooldown_amount = 0;
weapon_cooldown = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup characteristics and skills from global settings

if (ds_map_find_value(global.options, "history_mode"))
{
    if (global.character[0] == 0) global.character[0] = 5;
    if (global.character[1] == 0) global.character[1] = 3;
    if (global.character[2] == 0) global.character[2] = 5;
    if (global.character[3] == 0) global.character[3] = 3;
    if (global.character[4] == 0) global.character[4] = 5;
    if (global.character[5] == 0) global.character[5] = 2;
    if (global.character[6] == 0) global.character[6] = 2;
    if (global.character[7] == 0) global.character[7] = 5;
}
else
{
    if (global.character[0] == 0) global.character[0] = 2;
    if (global.character[1] == 0) global.character[0] = 1;
    if (global.character[2] == 0) global.character[0] = 2;
    if (global.character[3] == 0) global.character[0] = 1;
    if (global.character[4] == 0) global.character[0] = 8;
    if (global.character[5] == 0) global.character[0] = 1;
    if (global.character[6] == 0) global.character[0] = 1;
    if (global.character[7] == 0) global.character[0] = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turning back cooldown value

weapon_cooldown = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn back hero to white colour

image_blend = c_white;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Position on ground

onGround = position_meeting(x, y + 1, obj_standing_on);

var inst = instance_position(x, y + 1, obj_standing_on);

if (inst != noone) 
{ 
    onGround = onGround and inst.visible == true; 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = Shoot

if (state == "shoot")
{
    image_speed = 1.0;
    sprite_index = spr_mainhero_shoot;
    
    if (image_index &gt; 18)
    {
        state = "idle";
    }
    
    if (allow_shoot)
    {
        allow_shoot = false;
        
        if (image_xscale &gt; 0)
        {
            switch (weapon)
            {
                case weapons.weapon_fire:
                    runicBullet = instance_create(x + 54, y - 48, obj_bullet_fire);
                    cooldown_amount = 50 * (1 - global.character[3] * 0.1); //Interact with Call of Hield state
                break;
                
                case weapons.weapon_ice:
                    runicBullet = instance_create(x + 54, y - 48, obj_bullet_ice);
                    cooldown_amount = 40 * (1 - global.character[3] * 0.1); //Interact with Call of Hield state
                break;
            }
            runicBullet.direction = 0;
        }
        else
        {
            switch (weapon)
            {
                case weapons.weapon_fire:
                    runicBullet = instance_create(x - 54, y - 48, obj_bullet_fire);
                    cooldown_amount = 50 * (1 - global.character[3] * 0.1); //Interact with Call of Hield state
                break;
                
                case weapons.weapon_ice:
                    runicBullet = instance_create(x - 54, y - 48, obj_bullet_ice);
                    cooldown_amount = 40 * (1 - global.character[3] * 0.1); //Interact with Call of Hield state
                break;
            }
            runicBullet.direction = 180;
        }
        
        if ((maxenergy - 1) == 0) weapon = weapons.weapon_none;
        
        maxenergy --;
        runicBullet.speed = 20;
        runicBullet.xCreate = x;
        runicBullet.yCreate = y;
    
        weapon_cooldown = true;
        if (alarm[1] == -1) alarm[1] = cooldown_amount;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = Idle

if ((state == "idle" or state == "jump" or state == "falling") and !punched)
{
    if (keyboard_check(ord("A")) xor keyboard_check(vk_left))
    {
        image_speed = 0.5;
        sprite_index = spr_mainhero_walk;
        x -= move_speed;
        image_xscale = -1;
    }
    else if (keyboard_check(ord("D")) xor keyboard_check(vk_right))
    {
        image_speed = 0.5;
        sprite_index = spr_mainhero_walk;
        x += move_speed;
        image_xscale = 1;
    }
    else if (mouse_check_button_released(mb_left))
    {
        if (weapon != weapons.weapon_none and !weapon_cooldown)
        {
            state = "shoot";
            allow_shoot = true;
        }
    }
    else sprite_index = spr_mainhero_idle;
        
    if (keyboard_check_pressed(ord("W")) xor keyboard_check_pressed(vk_up))
    {
        if (onGround)
        {
            state = "jump"; jumped = true;
        }
    }
}

if (state == "pause") sprite_index = spr_mainhero_idle;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = Falling

if (!onGround and state != "pause")
{
    if (vert_speed &lt; 18)
    {
        vert_speed += grav; //Gravity falling
    }
    
    y += vert_speed;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = Jump

if (state == "jump")
{
    if (onGround)
    {
        if (!jumped)
        {
            state = "idle";
        }
        else
        {
            vert_speed = -jump_speed;
            jumped = false;
        }
    }
    else
    {
        state = "falling";
    }
    
    y += vert_speed;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = Punched

if (punched)
{
    sprite_index = spr_mainhero_punched;
    image_speed = 0.8;
    
    if (image_index &gt; 19) punched = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = Death

if (global.character[8] &lt;= 0) state = "death";

if (state == "death")
{
    sprite_index = spr_mainhero_death;
    image_speed = 0.5;
    
    if (image_index &gt; 30)
    {
        already_dead = true;
        image_index = 30;
        global.greatInfo = "Нажмите клавишу [R], чтобы воскреснуть и попытать удачи еще раз.";
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check collisions with room borders

if (room_get_name(room) == "dark_forest_1" and state != "pause")
{
    if (x - border_const &lt;= 0) x += move_speed + 1;
            
    if (x + border_const &gt; room_width) room_goto (dark_forest_2);
}

if (room_get_name(room) == "dark_forest_2" and state != "pause")
{
    if (x - border_const &lt;= 0) room_goto (dark_forest_1);
    
    if (x + border_const &gt; room_width) room_goto (dark_forest_3);
}

if (room_get_name(room) == "dark_forest_3" and state != "pause")
{
    if (x - border_const &lt;= 0) room_goto (dark_forest_2);
    
    if (x + border_const &gt; room_width) x -= move_speed + 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (item_check_value("Medical_Rune") &gt; 0)
{
    global.character[8] += global.character[0] * 0.1 * global.character[2];
    
    if (global.character[8] &gt; global.character[0])
    {
        global.character[8] = global.character[0];
    }
    
    item_set_value("Medical_Rune", item_check_value("Medical_Rune") - 1);
    
    image_blend = c_teal;
    alarm[0] = 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
