<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variable

roomTitle = "Hanif Flat UI";
subTitle = "Button and Radio Button";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Instance controls

//Normal button
button0 = ui_button_create(32, 192, 389, ui_default, "NORMAL BUTTON");

//Flat button
button1 = ui_button_create(448, 192, 389, ui_default, "FLAT BUTTON");
ui_button_set_flat(button1, true);
ui_set_foreground_colour(button1, ui_black);

//Disabled button
button2 = ui_button_create(858, 192, 389, ui_default, "DISABLED BUTTON");
ui_set_enable(button2, false);

//Colouring button
button3 = ui_button_create(32, 256, 288, ui_default, "COLOURING BUTTON");
ui_set_background_colour(button3, ui_red);
button4 = ui_button_create(340, 256, 288, ui_default, "COLOURING BUTTON");
ui_set_background_colour(button4, ui_orange);
button5 = ui_button_create(648, 256, 288, ui_default, "COLOURING BUTTON");
ui_set_background_colour(button5, ui_green);
button6 = ui_button_create(956, 256, 288, ui_default, "COLOURING BUTTON");
ui_set_background_colour(button6, ui_brown);

//Normal radio button
radio0 = ui_radio_create(64, 456, ui_default, "Option1");
ui_set_foreground_colour(radio0, ui_grey);
radio1 = ui_radio_create(64, 488, ui_default, "Option2");
ui_set_foreground_colour(radio1, ui_grey);
radio2 = ui_radio_create(64, 520, ui_default, "Option3");
ui_set_foreground_colour(radio2, ui_grey);

//Custom group radio button
radio3 = ui_radio_create(480, 456, ui_default, "Option1");
ui_set_foreground_colour(radio3, ui_grey);
ui_radio_set_group(radio3, "group0");
radio4 = ui_radio_create(480, 488, ui_default, "Option2");
ui_set_foreground_colour(radio4, ui_grey);
ui_radio_set_group(radio4, "group0");
ui_set_checked(radio4, true);
radio5 = ui_radio_create(480, 520, ui_default, "Option3");
ui_set_foreground_colour(radio5, ui_grey);
ui_radio_set_group(radio5, "group0");

//Custom group radio button with disabled option
radio6 = ui_radio_create(890, 456, ui_default, "Option1");
ui_set_foreground_colour(radio6, ui_grey);
ui_radio_set_group(radio6, "group1");
radio7 = ui_radio_create(890, 488, ui_default, "Option2");
ui_set_foreground_colour(radio7, ui_grey);
ui_radio_set_group(radio7, "group1");
radio8 = ui_radio_create(890, 520, ui_default, "Option3");
ui_set_foreground_colour(radio8, ui_grey);
ui_set_enable(radio8, false);
ui_radio_set_group(radio8, "group1");
radio9 = ui_radio_create(890, 552, ui_default, "Option3");
ui_set_foreground_colour(radio9, ui_grey);
ui_radio_set_group(radio9, "group1");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create footer button

//Create a button handler
prevButton = ui_button_create(room_width - 288, room_height - 40, 128, 32, "PREVIOUS");


//Create a button handler
nextButton = ui_button_create(room_width - 144, room_height - 40, 128, 32, "NEXT");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change cursor on hover controls

if(ui_get_entered(prevButton) || ui_get_entered(nextButton) || ui_get_entered(button0) || ui_get_entered(button1) || ui_get_entered(button3) || ui_get_entered(button4) || ui_get_entered(button5) || ui_get_entered(button6))
{
    window_set_cursor(cr_handpoint);
}
else if(ui_get_entered(radio0) || ui_get_entered(radio1) || ui_get_entered(radio2) || ui_get_entered(radio3) || ui_get_entered(radio4) || ui_get_entered(radio5) || ui_get_entered(button5) || ui_get_entered(radio6) || ui_get_entered(radio7) || ui_get_entered(radio9))
{
    window_set_cursor(cr_handpoint);
}
else
{
    window_set_cursor(cr_default);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control actions

if(ui_button_clicked(prevButton))
{
    room_goto_previous();
}

if(ui_button_clicked(nextButton))
{
    room_goto_next();
}

if(ui_button_clicked(button0))
{
    show_message_async("You clicked on Button");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clear all controls
ui_clear_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw instance elements

//Draw subtitle
draw_set_font(fontHuge);
draw_set_halign(fa_middle);
draw_set_valign(fa_top);
draw_text_colour(room_width / 2, 100, subTitle, ui_grey, ui_grey, ui_grey, ui_grey, 1);

//Draw group label
draw_set_font(fontTitle);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_text_colour(48, 404, "Default goup option", ui_grey, ui_grey, ui_grey, ui_grey, 1);
draw_text_colour(464, 404, "Custom goup with default checked", ui_grey, ui_grey, ui_grey, ui_grey, 1);
draw_text_colour(874, 404, "Custom goup with disabled option", ui_grey, ui_grey, ui_grey, ui_grey, 1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw GUI and Controls

//Drawing header &amp; footer
header();
footer();

//Drawing title
draw_set_font(fontTitle);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_text_colour(16, 18, roomTitle, ui_white, ui_white, ui_white, ui_white, 1);

//Drawing all controls
ui_draw_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
