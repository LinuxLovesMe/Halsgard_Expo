<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variable

roomTitle = "Hanif Flat UI";
subTitle = "Checkbox and Switch";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Instance controls

//Checkbox
checkbox0 = ui_checkbox_create(32, 192, ui_default, "This option is unchecked");
ui_set_foreground_colour(checkbox0, ui_grey);

//Disabled checkbox
checkbox1 = ui_checkbox_create(320, 192, ui_default, "This option is disabled");
ui_set_foreground_colour(checkbox1, ui_grey);
ui_set_enable(checkbox1, false);

//Customizing checkbox
checkbox2 = ui_checkbox_create(32, 240, 32, "Customizing checkbox");
ui_set_foreground_colour(checkbox2, ui_grey);
ui_set_background_colour(checkbox2, ui_pink);
ui_set_checked(checkbox2, true);

//Customizing checkbox
checkbox3 = ui_checkbox_create(320, 240, 40, "Customizing checkbox");
ui_set_foreground_colour(checkbox3, ui_grey);
ui_set_background_colour(checkbox3, ui_deep_orange);
ui_set_checked(checkbox3, true);

//Customizing checkbox
checkbox4 = ui_checkbox_create(608, 240, 48, "Customizing checkbox");
ui_set_foreground_colour(checkbox4, ui_grey);
ui_set_background_colour(checkbox4, ui_teal);
ui_set_inner_colour(checkbox4, ui_yellow);
ui_set_checked(checkbox4, true);


//Switch
switch0 = ui_switch_create(32, 368, ui_default, ui_default, "This switch is 'OFF'");
ui_set_foreground_colour(switch0, ui_grey);

//Disabled switch
switch1 = ui_switch_create(320, 368, ui_default, ui_default, "This switch is disabled");
ui_set_foreground_colour(switch1, ui_grey);
ui_set_enable(switch1, false);

//Customizing switch
switch2 = ui_switch_create(32, 416, 96, 32, "Customizing switch");
ui_set_foreground_colour(switch2, ui_grey);
ui_set_background_colour(switch2, ui_pink);
ui_set_checked(switch2, true);

//Customizing switch
switch3 = ui_switch_create(320, 416, 96, 32, "Customizing switch");
ui_set_foreground_colour(switch3, ui_grey);
ui_set_background_colour(switch3, ui_deep_orange);
ui_set_checked(switch3, true);

//Customizing switch
switch4 = ui_switch_create(608, 416, 96, 32, "Customizing switch");
ui_set_foreground_colour(switch4, ui_grey);
ui_set_background_colour(switch4, ui_teal);
ui_set_checked(switch4, true);

//Customizing switch
switch4 = ui_switch_create(896, 416, 96, 32, "Customizing switch");
ui_set_foreground_colour(switch4, ui_grey);
ui_set_background_colour(switch4, ui_deep_blue);
ui_set_inner_colour(switch4, ui_blue);
ui_set_checked(switch4, true);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create footer button

//Create a button handler
prevButton = ui_button_create(room_width - 288, room_height - 40, 128, 32, "PREVIOUS");


//Create a button handler
nextButton = ui_button_create(room_width - 144, room_height - 40, 128, 32, "NEXT");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change cursor on hover controls

if(ui_get_entered(prevButton) || ui_get_entered(nextButton) || ui_get_entered(checkbox0) || ui_get_entered(checkbox2) || ui_get_entered(checkbox3) || ui_get_entered(checkbox4))
{
    window_set_cursor(cr_handpoint);
}
else if(ui_get_entered(switch0) || ui_get_entered(switch2) || ui_get_entered(switch3) || ui_get_entered(switch4))
{
    window_set_cursor(cr_handpoint);
}
else
{
    window_set_cursor(cr_default);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control actions

if(ui_button_clicked(prevButton))
{
    room_goto_previous();
}

if(ui_button_clicked(nextButton))
{
    room_goto_next();
}


//Example to get checkbox status

if(ui_get_checked(checkbox0))
{
  ui_set_label(checkbox0, "This option is checked");
}
else
{
  ui_set_label(checkbox0, "This option is unchecked");
}


//Example to get switch status

if(ui_get_checked(switch0))
{
  ui_set_label(switch0, "This switch is 'ON'");
}
else
{
  ui_set_label(switch0, "This switch is 'OFF'");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clear all controls
ui_clear_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw instance elements

//Draw subtitle
draw_set_font(fontHuge);
draw_set_halign(fa_middle);
draw_set_valign(fa_top);
draw_text_colour(room_width / 2, 100, subTitle, ui_grey, ui_grey, ui_grey, ui_grey, 1);

//Draw group label
draw_set_font(fontTitle);
draw_set_halign(fa_left);
draw_set_valign(fa_top);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw GUI and Controls

//Drawing header &amp; footer
header();
footer();

//Drawing title
draw_set_font(fontTitle);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_text_colour(16, 18, roomTitle, ui_white, ui_white, ui_white, ui_white, 1);

//Drawing all controls
ui_draw_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
